{"remainingRequest":"/Users/darylkoh/Downloads/seevee/node_modules/babel-loader/lib/index.js!/Users/darylkoh/Downloads/seevee/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/darylkoh/Downloads/seevee/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/darylkoh/Downloads/seevee/src/components/InstitutionView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/darylkoh/Downloads/seevee/src/components/InstitutionView.vue","mtime":1617037651962},{"path":"/Users/darylkoh/Downloads/seevee/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/darylkoh/Downloads/seevee/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/darylkoh/Downloads/seevee/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/darylkoh/Downloads/seevee/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2Rhcnlsa29oL0Rvd25sb2Fkcy9zZWV2ZWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7IC8vaW1wb3J0IGRhdGFiYXNlIGZyb20gJy4uL2ZpcmViYXNlLmpzJyAvL3RvIGxvZyBvdXIgZGF0YQoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJhcHAiLAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcEdldHRlcnMoImFjY291bnRzIiwgWyJhY3RpdmVBY2NvdW50IiwgImFjdGl2ZUJhbGFuY2UiXSkpLCBtYXBHZXR0ZXJzKCJkcml6emxlIiwgWyJkcml6emxlSW5zdGFuY2UiLCAiaXNEcml6emxlSW5pdGlhbGl6ZWQiXSkpLAogIG1ldGhvZHM6IHsKICAgIC8qCiAgICBhc3luYyBnZXRHcmFkZSgpIHsKICAgICAgICAvLyBSZXRyaWV2ZSB2YWx1ZSB1c2luZyAiLmNhbGwoKScKICAgICAgICB0aGlzLnZpZXcuZ3JhZGUgPSBhd2FpdCB0aGlzLmRyaXp6bGVJbnN0YW5jZQogICAgICAgICAgLmNvbnRyYWN0cwogICAgICAgICAgLkNyZWRlbnRpYWwKICAgICAgICAgIC5tZXRob2RzCiAgICAgICAgICAudmlld0dyYWRlKHRoaXMudmlldy5hZGRyLCB0aGlzLnZpZXcubW9kQ29kZSkKICAgICAgICAgIC5jYWxsKCk7IAogICAgIH0sCiAgICAgYXN5bmMgZ2V0Q291bnQoKSB7CiAgICAgICAgdGhpcy5jbnQubnVtID0gYXdhaXQgdGhpcy5kcml6emxlSW5zdGFuY2UKICAgICAgICAgIC5jb250cmFjdHMKICAgICAgICAgIC5DcmVkZW50aWFsCiAgICAgICAgICAubWV0aG9kcwogICAgICAgICAgLnN0dWRlbnRBY2FkQ291bnQodGhpcy5jbnQuYWRkcikKICAgICAgICAgIC5jYWxsKCk7CiAgICAgfSwKICAgICBhc3luYyBkZWNyKCkgewogICAgICAgICBhd2FpdCB0aGlzLmRyaXp6bGVJbnN0YW5jZQogICAgICAgICAgIC5jb250cmFjdHMKICAgICAgICAgICAuRHVtbXkKICAgICAgICAgICAubWV0aG9kcwogICAgICAgICAgIC5kZWNyKCkKICAgICAgICAgICAuc2VuZCgpOwogICAgIH0sCiAgICAgYXN5bmMgaW5jcigpIHsKICAgICAgICAgYXdhaXQgdGhpcy5kcml6emxlSW5zdGFuY2UKICAgICAgICAgICAuY29udHJhY3RzCiAgICAgICAgICAgLkR1bW15CiAgICAgICAgICAgLm1ldGhvZHMKICAgICAgICAgICAuaW5jcigpCiAgICAgICAgICAgLnNlbmQoKTsKICAgICB9LAogICAgICovCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsvLyBhbGwgdGhlc2UgZGF0YSB3aWxsIHNlcnZlIGFzIGFyZ3VtZW50cyB0byBvdXIgY29udHJhY3QgY2FsbHMKCiAgICAgIC8qCiAgICAgIHZpZXc6IHsKICAgICAgICBhZGRyOiAnJywKICAgICAgICBtb2RDb2RlOiAnJywKICAgICAgICBncmFkZTogJycsCiAgICAgIH0sCiAgICAgIGNudDogewogICAgICAgICAgYWRkcjogJycsCiAgICAgICAgICBudW06ICcnCiAgICAgIH0KICAgICAgKi8KICAgIH07CiAgfQp9Ow=="},{"version":3,"sources":["InstitutionView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA,SAAA,UAAA,QAAA,MAAA,C,CACA;;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,QAAA,kCACA,UAAA,CAAA,UAAA,EAAA,CAAA,eAAA,EAAA,eAAA,CAAA,CADA,GAEA,UAAA,CAAA,SAAA,EAAA,CAAA,iBAAA,EAAA,sBAAA,CAAA,CAFA,CAFA;AAMA,EAAA,OAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA,GANA;AA2CA,EAAA,IA3CA,kBA2CA;AACA,WAAA,CACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,KAAA;AAcA;AA1DA,CAAA","sourcesContent":["<!--\n// (1) Drizzle template tag to return a contract call\n<drizzle-contract\n    contractName=\"Credential\"\n    method=\"owner\"\n    label=\"Value\"\n/>\n// (2) Drizzle template to call a contract with its arguments\n<drizzle-contract-form\n    contractName=\"Credential\"\n    method=\"mintAcad\"\n    :placeholders=\"['studentAddress','moduleCode','moduleGrade']\"\n/>\n// (3) Drizzle template limitations:\n// - dizzle-contract cannot call viewing functions with arguments!?\n// - drizzle-contract-form cannot add fields or retireve field values; hidden by drizzle abstraction â€“ cannot log into firebase.\n-->\n<template>\n<div>\n    <hdrIns></hdrIns>\n    <br><hr><br>\n    <h1 style=\"color: blue\"> INSTITUTION'S <u> TOKEN VIEWING PAGE </u> </h1>\n    <br><hr><br>\n    <!--h1> MAIN CONTRACT OWNER ACCOUNT </h1>\n    <drizzle-contract\n        contractName=\"Credential\"\n        method=\"owner\"\n        label=\"Value\"\n    /-->\n    <br><hr><br>\n    <h1> CURRENT METAMASK ACCOUNT </h1>\n    <!-- this has some big number error in the console-->\n    <!--drizzle-account units=\"Ether\" :precision=\"2\"/-->\n    <p>{{activeAccount}}</p>\n    <p>Balance: {{activeBalance}} Wei</p>\n    <br><hr><br>\n    <!--h1> (1) MAIN CONTRACT (TEST) </h1>\n    <h1> VIEWING ACAD TOKEN </h1>\n    <drizzle-contract\n        contractName=\"Credential\"\n        method=\"tokenId\"\n        label=\"Number of Acads Minted\"\n    />\n    <form>\n    <input type=\"text\" v-model=\"view.addr\" placeholder=\"Insert student address\"/>\n    <input type=\"text\" v-model=\"view.modCode\" placeholder=\"Insert module code\"/>\n    <button v-on:click.prevent=\"getGrade\"> Get Grade </button>\n    </form>\n    <p> GRADE: {{this.view.grade}}</p> \n    <br><hr><br>\n    <h1> (2) EMBEDDED CONTRACT (TEST) </h1>\n    <h1> COUNTING ACAD TOKEN </h1>\n    <form>\n    <input type=\"text\" v-model=\"cnt.addr\" placeholder=\"Insert student address\"/>\n    <button v-on:click.prevent=\"getCount\"> Get Count </button>\n    </form>\n    <p> NUMBER OF TOKENS: {{this.cnt.num}}</p> \n    <br><hr><br>\n    <h1> (3) SECOND DEPLOYED CONTRACT (TEST) </h1>\n    <h1> DEPLOYED SECOND CONTRACT </h1>\n    <drizzle-contract\n        contractName=\"Dummy\"\n        method=\"counter\"\n        label=\"Current Count\"\n    />\n    <button v-on:click.prevent=\"decr\"> Decrease </button>\n    <button v-on:click.prevent=\"incr\"> Increase </button>\n    <br><hr><br-->\n</div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n//import database from '../firebase.js' //to log our data\n\nexport default {\n  name: \"app\",\n  computed: {\n      ...mapGetters(\"accounts\",[\"activeAccount\",\"activeBalance\"]),\n      ...mapGetters(\"drizzle\",[\"drizzleInstance\",\"isDrizzleInitialized\"]),\n  },\n  methods: {\n      /*\n      async getGrade() {\n          // Retrieve value using \".call()'\n          this.view.grade = await this.drizzleInstance\n            .contracts\n            .Credential\n            .methods\n            .viewGrade(this.view.addr, this.view.modCode)\n            .call(); \n       },\n       async getCount() {\n          this.cnt.num = await this.drizzleInstance\n            .contracts\n            .Credential\n            .methods\n            .studentAcadCount(this.cnt.addr)\n            .call();\n       },\n       async decr() {\n           await this.drizzleInstance\n             .contracts\n             .Dummy\n             .methods\n             .decr()\n             .send();\n       },\n       async incr() {\n           await this.drizzleInstance\n             .contracts\n             .Dummy\n             .methods\n             .incr()\n             .send();\n       },\n       */\n  },\n  data() {\n      return {\n          // all these data will serve as arguments to our contract calls\n          /*\n          view: {\n            addr: '',\n            modCode: '',\n            grade: '',\n          },\n          cnt: {\n              addr: '',\n              num: ''\n          }\n          */\n      }\n  },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n\n\n\n\n"],"sourceRoot":"src/components"}]}