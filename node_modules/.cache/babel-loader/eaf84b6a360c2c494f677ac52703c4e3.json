{"remainingRequest":"/Users/darylkoh/Downloads/IS4302 PROJECT/AAA_TEST_20210317/VUE APP/seevee/node_modules/babel-loader/lib/index.js!/Users/darylkoh/Downloads/IS4302 PROJECT/AAA_TEST_20210317/VUE APP/seevee/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/darylkoh/Downloads/IS4302 PROJECT/AAA_TEST_20210317/VUE APP/seevee/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/darylkoh/Downloads/IS4302 PROJECT/AAA_TEST_20210317/VUE APP/seevee/src/components/InstitutionMint.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/darylkoh/Downloads/IS4302 PROJECT/AAA_TEST_20210317/VUE APP/seevee/src/components/InstitutionMint.vue","mtime":1616786185099},{"path":"/Users/darylkoh/Downloads/IS4302 PROJECT/AAA_TEST_20210317/VUE APP/seevee/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/darylkoh/Downloads/IS4302 PROJECT/AAA_TEST_20210317/VUE APP/seevee/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/darylkoh/Downloads/IS4302 PROJECT/AAA_TEST_20210317/VUE APP/seevee/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/darylkoh/Downloads/IS4302 PROJECT/AAA_TEST_20210317/VUE APP/seevee/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9kYXJ5bGtvaC9Eb3dubG9hZHMvSVM0MzAyIFBST0pFQ1QvQUFBX1RFU1RfMjAyMTAzMTcvVlVFIEFQUC9zZWV2ZWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvZGFyeWxrb2gvRG93bmxvYWRzL0lTNDMwMiBQUk9KRUNUL0FBQV9URVNUXzIwMjEwMzE3L1ZVRSBBUFAvc2VldmVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmltcG9ydCBkYXRhYmFzZSBmcm9tICcuLi9maXJlYmFzZS5qcyc7IC8vdG8gbG9nIG91ciBkYXRhCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImFwcCIsCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwR2V0dGVycygiYWNjb3VudHMiLCBbImFjdGl2ZUFjY291bnQiLCAiYWN0aXZlQmFsYW5jZSJdKSksIG1hcEdldHRlcnMoImRyaXp6bGUiLCBbImRyaXp6bGVJbnN0YW5jZSIsICJpc0RyaXp6bGVJbml0aWFsaXplZCJdKSksCiAgbWV0aG9kczogewogICAgZ2V0R3JhZGU6IGZ1bmN0aW9uIGdldEdyYWRlKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5kcml6emxlSW5zdGFuY2UuY29udHJhY3RzLkNyZWRlbnRpYWwubWV0aG9kcy52aWV3R3JhZGUoX3RoaXMudmlldy5hZGRyLCBfdGhpcy52aWV3Lm1vZENvZGUpLmNhbGwoKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgX3RoaXMudmlldy5ncmFkZSA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBtaW50VG9rZW46IGZ1bmN0aW9uIG1pbnRUb2tlbigpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi5kcml6emxlSW5zdGFuY2UuY29udHJhY3RzLkNyZWRlbnRpYWwubWV0aG9kcy5taW50QWNhZChfdGhpczIubWludC5hZGRyLCBfdGhpczIubWludC5tb2RDb2RlLCBfdGhpczIubWludC5ncmFkZSkuc2VuZCgpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBkYXRhYmFzZS5jb2xsZWN0aW9uKCJzdHVkZW50cyIpLmRvYyhfdGhpczIubWludC5hZGRyKS5nZXQoKS50aGVuKGZ1bmN0aW9uIChkb2MpIHsKICAgICAgICAgICAgICAgICAgaWYgKCFkb2MuZXhpc3RzKSB7CiAgICAgICAgICAgICAgICAgICAgZGF0YWJhc2UuY29sbGVjdGlvbigic3R1ZGVudHMiKS5kb2MoX3RoaXMyLm1pbnQuYWRkcikuc2V0KHt9KTsKICAgICAgICAgICAgICAgICAgICBkYXRhYmFzZS5jb2xsZWN0aW9uKCJzdHVkZW50cyIpLmRvYyhfdGhpczIubWludC5hZGRyKS5jb2xsZWN0aW9uKCJhY2FkcyIpLmFkZCh7CiAgICAgICAgICAgICAgICAgICAgICBzdHVkZW50QWRkcmVzczogX3RoaXMyLm1pbnQuYWRkciwKICAgICAgICAgICAgICAgICAgICAgIG1vZHVsZUNvZGU6IF90aGlzMi5taW50Lm1vZENvZGUsCiAgICAgICAgICAgICAgICAgICAgICBncmFkZUF0dGFpbmVkOiBfdGhpczIubWludC5ncmFkZQogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGRhdGFiYXNlLmNvbGxlY3Rpb24oInN0dWRlbnRzIikuZG9jKF90aGlzMi5taW50LmFkZHIpLmNvbGxlY3Rpb24oImFjYWRzIikuYWRkKHsKICAgICAgICAgICAgICAgICAgICAgIHN0dWRlbnRBZGRyZXNzOiBfdGhpczIubWludC5hZGRyLAogICAgICAgICAgICAgICAgICAgICAgbW9kdWxlQ29kZTogX3RoaXMyLm1pbnQubW9kQ29kZSwKICAgICAgICAgICAgICAgICAgICAgIGdyYWRlQXR0YWluZWQ6IF90aGlzMi5taW50LmdyYWRlCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBnZXRDb3VudDogZnVuY3Rpb24gZ2V0Q291bnQoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczMuZHJpenpsZUluc3RhbmNlLmNvbnRyYWN0cy5DcmVkZW50aWFsLm1ldGhvZHMuc3R1ZGVudEFjYWRDb3VudChfdGhpczMuY250LmFkZHIpLmNhbGwoKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgX3RoaXMzLmNudC5udW0gPSBfY29udGV4dDMuc2VudDsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZGVjcjogZnVuY3Rpb24gZGVjcigpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNC5kcml6emxlSW5zdGFuY2UuY29udHJhY3RzLkR1bW15Lm1ldGhvZHMuZGVjcigpLnNlbmQoKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0KTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgaW5jcjogZnVuY3Rpb24gaW5jcigpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNSgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTUkKF9jb250ZXh0NSkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNS5kcml6emxlSW5zdGFuY2UuY29udHJhY3RzLkR1bW15Lm1ldGhvZHMuaW5jcigpLnNlbmQoKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU1KTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8gYWxsIHRoZXNlIGRhdGEgd2lsbCBzZXJ2ZSBhcyBhcmd1bWVudHMgdG8gb3VyIGNvbnRyYWN0IGNhbGxzCiAgICAgIHZpZXc6IHsKICAgICAgICBhZGRyOiAnJywKICAgICAgICBtb2RDb2RlOiAnJywKICAgICAgICBncmFkZTogJycKICAgICAgfSwKICAgICAgbWludDogewogICAgICAgIGFkZHI6ICcnLAogICAgICAgIG1vZENvZGU6ICcnLAogICAgICAgIGdyYWRlOiAnJwogICAgICB9LAogICAgICBjbnQ6IHsKICAgICAgICBhZGRyOiAnJywKICAgICAgICBudW06ICcnCiAgICAgIH0KICAgIH07CiAgfQp9Ow=="},{"version":3,"sources":["InstitutionMint.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\n// (1) Drizzle template tag to return a contract call\n<drizzle-contract\n    contractName=\"Credential\"\n    method=\"owner\"\n    label=\"Value\"\n/>\n// (2) Drizzle template to call a contract with its arguments\n<drizzle-contract-form\n    contractName=\"Credential\"\n    method=\"mintAcad\"\n    :placeholders=\"['studentAddress','moduleCode','moduleGrade']\"\n/>\n// (3) Drizzle template limitations:\n// - dizzle-contract cannot call viewing functions with arguments!?\n// - drizzle-contract-form cannot add fields or retireve field values; hidden by drizzle abstraction – cannot log into firebase.\n-->\n<template>\n<div>\n    <hdrIns></hdrIns>\n    <br><hr><br>\n    <h1 style=\"color: blue\"> INSTITUTION'S <u> MINTING PAGE </u> </h1>\n    <br><hr><br>\n    <h1> MAIN CONTRACT OWNER ACCOUNT </h1>\n    <drizzle-contract\n        contractName=\"Credential\"\n        method=\"owner\"\n        label=\"Value\"\n    />\n    <br><hr><br>\n    <h1> CURRENT METAMASK ACCOUNT </h1>\n    <!-- this has some big number error in the console-->\n    <!--drizzle-account units=\"Ether\" :precision=\"2\"/-->\n    <p>{{activeAccount}}</p>\n    <p>Balance: {{activeBalance.toString()}} Wei</p>\n    <br><hr><br>\n    <h1> (1) MAIN CONTRACT (TEST) </h1>\n    <h1> MINTING ACAD TOKEN </h1>\n    <drizzle-contract\n        contractName=\"Credential\"\n        method=\"tokenId\"\n        label=\"Number of Acads Minted\"\n    />\n    <!-- START MINT ACAD OPTION (1) -->\n    <!--drizzle-contract-form\n        contractName=\"Credential\"\n        method=\"mintAcad\"\n        :placeholders=\"['studentAddress','moduleCode','moduleGrade']\"\n    /-->\n    <!-- END MINT ACAD OPTION (1) -->\n    <!-- START MINT ACAD OPTION (2) -->\n    <form>\n    <input type=\"text\" v-model=\"mint.addr\" placeholder=\"Insert student address\"/>\n    <input type=\"text\" v-model=\"mint.modCode\" placeholder=\"Insert module code\"/>\n    <input type=\"text\" v-model=\"mint.grade\" placeholder=\"Module Grade\"/>\n    <button v-on:click.prevent=\"mintToken\"> Mint Token </button>\n    </form>\n    <!-- END MINT ACAD OPTION (2) -->\n    <br><hr><br>\n    <h1> (1) MAIN CONTRACT (TEST) </h1>\n    <h1> VIEWING ACAD TOKEN </h1>\n    <form>\n    <input type=\"text\" v-model=\"view.addr\" placeholder=\"Insert student address\"/>\n    <input type=\"text\" v-model=\"view.modCode\" placeholder=\"Insert module code\"/>\n    <button v-on:click.prevent=\"getGrade\"> Get Grade </button>\n    </form>\n    <p> GRADE: {{this.view.grade}}</p> \n    <br><hr><br>\n    <h1> (2) EMBEDDED CONTRACT (TEST) </h1>\n    <h1> COUNTING ACAD TOKEN </h1>\n    <form>\n    <input type=\"text\" v-model=\"cnt.addr\" placeholder=\"Insert student address\"/>\n    <button v-on:click.prevent=\"getCount\"> Get Count </button>\n    </form>\n    <p> NUMBER OF TOKENS: {{this.cnt.num}}</p> \n    <br><hr><br>\n    <h1> (3) SECOND DEPLOYED CONTRACT (TEST) </h1>\n    <h1> DEPLOYED SECOND CONTRACT </h1>\n    <drizzle-contract\n        contractName=\"Dummy\"\n        method=\"counter\"\n        label=\"Current Count\"\n    />\n    <button v-on:click.prevent=\"decr\"> Decrease </button>\n    <button v-on:click.prevent=\"incr\"> Increase </button>\n    <br><hr><br>\n</div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport database from '../firebase.js' //to log our data\n\nexport default {\n  name: \"app\",\n  computed: {\n      ...mapGetters(\"accounts\",[\"activeAccount\",\"activeBalance\"]),\n      ...mapGetters(\"drizzle\",[\"drizzleInstance\",\"isDrizzleInitialized\"]),\n  },\n  methods: {\n      async getGrade() {\n          // Retrieve value using \".call()'\n          this.view.grade = await this.drizzleInstance\n            .contracts\n            .Credential\n            .methods\n            .viewGrade(this.view.addr, this.view.modCode)\n            .call(); \n       },\n       async mintToken() {\n           // Retrieve value using \".send()\"\n           await this.drizzleInstance\n             .contracts\n             .Credential\n             .methods\n             .mintAcad(this.mint.addr, this.mint.modCode, this.mint.grade)\n             .send();\n           database.collection(\"students\").doc(this.mint.addr).get().then(doc => {\n               if (!doc.exists) {\n                   database.collection(\"students\").doc(this.mint.addr).set({});\n                   database.collection(\"students\").doc(this.mint.addr).collection(\"acads\").add({\n                       studentAddress: this.mint.addr,\n                       moduleCode: this.mint.modCode,\n                       gradeAttained: this.mint.grade,\n                   });\n               } else {\n                   database.collection(\"students\").doc(this.mint.addr).collection(\"acads\").add({\n                       studentAddress: this.mint.addr,\n                       moduleCode: this.mint.modCode,\n                       gradeAttained: this.mint.grade,\n                   });\n               }\n           });\n       },\n       async getCount() {\n          this.cnt.num = await this.drizzleInstance\n            .contracts\n            .Credential\n            .methods\n            .studentAcadCount(this.cnt.addr)\n            .call();\n       },\n       async decr() {\n           await this.drizzleInstance\n             .contracts\n             .Dummy\n             .methods\n             .decr()\n             .send();\n       },\n       async incr() {\n           await this.drizzleInstance\n             .contracts\n             .Dummy\n             .methods\n             .incr()\n             .send();\n       },\n  },\n  data() {\n      return {\n          // all these data will serve as arguments to our contract calls\n          view: {\n            addr: '',\n            modCode: '',\n            grade: '',\n          },\n          mint: {\n              addr: '',\n              modCode: '',\n              grade: '',\n          },\n          cnt: {\n              addr: '',\n              num: ''\n          }\n      }\n  },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n\n\n\n\n"],"sourceRoot":"src/components"}]}