{"remainingRequest":"/Users/darylkoh/Downloads/seevee/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/darylkoh/Downloads/seevee/src/components/CandidateView.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/darylkoh/Downloads/seevee/src/components/CandidateView.vue","mtime":1617050331529},{"path":"/Users/darylkoh/Downloads/seevee/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/darylkoh/Downloads/seevee/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/darylkoh/Downloads/seevee/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/darylkoh/Downloads/seevee/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/darylkoh/Downloads/seevee/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNhcHAgewogIGZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7CiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7CiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgY29sb3I6ICMyYzNlNTA7CiAgbWFyZ2luLXRvcDogNjBweDsKfQoKbGFiZWwgewogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgd2lkdGg6IDE0MHB4OwogICAgdGV4dC1hbGlnbjogcmlnaHQ7Cn0K"},{"version":3,"sources":["CandidateView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"CandidateView.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n    <hdrCan></hdrCan>\n    <br><hr>\n    <p> <b> View Claim </b> </p>\n    <form>\n        <label> Claim ID: </label>\n        <input type=\"number\" v-model=\"claimId\" placeholder=\"ClaimID\"/> <br>\n        <label for=\"ins\"> Experience </label>\n        <input type=\"radio\" name=\"type\" v-model=\"exp\" v-bind:value=\"true\"> <br> \n        <label for=\"can\"> Academic </label>\n        <input type=\"radio\" name=\"type\" v-model=\"exp\" v-bind:value=\"false\"> <br>\n        <br>\n        <button v-on:click.prevent=\"retrieveClaim\"> Retrieve Claim </button>\n    </form>\n    <hr>\n    <div v-if=\"this.success\">\n        <p> Credential status is <b><u> {{this.status}}.</u></b> </p>\n    </div>\n</div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport database from '../firebase.js' //to log our data\n\nexport default {\n  name: \"app\",\n  computed: {\n      ...mapGetters(\"accounts\",[\"activeAccount\",\"activeBalance\"]),\n      ...mapGetters(\"drizzle\",[\"drizzleInstance\",\"isDrizzleInitialized\"]),\n  },\n  methods: {\n      async dummy() {\n          console.log(database);\n\n      },\n      async retrieveClaim() {\n          this.success = true; //reset\n          this.status = ''; //reset\n          var s = await this.drizzleInstance\n            .contracts\n            .Credential\n            .methods\n            .getStatus(this.claimId)\n            .call().catch((err) => { //call has no \"then\"!?\n                this.success = false;\n                console.log(err);\n            });\n          if (s==\"0\") {\n              this.status = \"false\";\n          } else if (s==\"1\") {\n              this.status = \"true\";\n          } else if (s==\"2\") {\n              this.status = \"pending\";\n          } else if (s==\"3\") {\n              this.status = \"revoked\";\n          } else {\n              this.status = \"error\";\n          }\n          var dat;\n          var hsh;\n          if (this.success && this.exp) { //implies document exist to query our db\n              hsh = await this.drizzleInstance.contracts.Credential.methods.viewClaim(this.claimId).call();\n              dat = await database.collection(\"students\").doc(this.activeAccount).collection(\"exp\").doc(hsh).get();\n              console.log(dat.data());\n          } else if (this.success && !this.exp) {\n              hsh = await this.drizzleInstance.contracts.Credential.methods.viewClaim(this.claimId).call();\n              dat = await database.collection(\"students\").doc(this.activeAccount).collection(\"acads\").doc(hsh).get();\n              console.log(dat.data());\n          }\n          console.log(hsh);\n      },\n      /*\n      async getGrade() {\n          // Retrieve value using \".call()'\n          this.view.grade = await this.drizzleInstance\n            .contracts\n            .Credential\n            .methods\n            .viewGrade(this.view.addr, this.view.modCode)\n            .call(); \n       },\n       async getCount() {\n          this.cnt.num = await this.drizzleInstance\n            .contracts\n            .Credential\n            .methods\n            .studentAcadCount(this.cnt.addr)\n            .call();\n       },\n       async decr() {\n           await this.drizzleInstance\n             .contracts\n             .Dummy\n             .methods\n             .decr()\n             .send();\n       },\n       async incr() {\n           await this.drizzleInstance\n             .contracts\n             .Dummy\n             .methods\n             .incr()\n             .send();\n       },*/\n  },\n  data() {\n      return {\n          claimId: '',\n          success: false,\n          status: '',\n          exp: false,\n\n          // all these data will serve as arguments to our contract calls\n          /*\n          view: {\n            addr: '',\n            modCode: '',\n            grade: '',\n          },\n          cnt: {\n              addr: '',\n              num: ''\n          }\n          */\n      }\n  },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\nlabel {\n    display: inline-block;\n    width: 140px;\n    text-align: right;\n}\n</style>\n\n\n\n"]}]}