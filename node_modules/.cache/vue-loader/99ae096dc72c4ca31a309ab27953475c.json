{"remainingRequest":"/Users/darylkoh/Downloads/seevee/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/darylkoh/Downloads/seevee/src/components/InstitutionView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/darylkoh/Downloads/seevee/src/components/InstitutionView.vue","mtime":1617101975060},{"path":"/Users/darylkoh/Downloads/seevee/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/darylkoh/Downloads/seevee/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/darylkoh/Downloads/seevee/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/darylkoh/Downloads/seevee/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JwppbXBvcnQgZGF0YWJhc2UgZnJvbSAnLi4vZmlyZWJhc2UuanMnIC8vdG8gbG9nIG91ciBkYXRhCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImFwcCIsCiAgY29tcHV0ZWQ6IHsKICAgICAgLi4ubWFwR2V0dGVycygiYWNjb3VudHMiLFsiYWN0aXZlQWNjb3VudCIsImFjdGl2ZUJhbGFuY2UiXSksCiAgICAgIC4uLm1hcEdldHRlcnMoImRyaXp6bGUiLFsiZHJpenpsZUluc3RhbmNlIiwiaXNEcml6emxlSW5pdGlhbGl6ZWQiXSksCiAgfSwKICBtZXRob2RzOiB7CiAgICAgIGFzeW5jIHJldHJpZXZlQ2xhaW0oKSB7CiAgICAgICAgICB0aGlzLnN1Y2Nlc3MgPSB0cnVlOyAvL3Jlc2V0CiAgICAgICAgICB0aGlzLnN0YXR1cyA9ICcnOyAvL3Jlc2V0CiAgICAgICAgICB2YXIgcyA9IGF3YWl0IHRoaXMuZHJpenpsZUluc3RhbmNlCiAgICAgICAgICAgIC5jb250cmFjdHMKICAgICAgICAgICAgLkNyZWRlbnRpYWwKICAgICAgICAgICAgLm1ldGhvZHMKICAgICAgICAgICAgLmdldFN0YXR1cyh0aGlzLmNsYWltSWQpCiAgICAgICAgICAgIC5jYWxsKCkuY2F0Y2goKGVycikgPT4geyAvL2NhbGwgaGFzIG5vICJ0aGVuIiE/CiAgICAgICAgICAgICAgICB0aGlzLnN1Y2Nlc3MgPSBmYWxzZTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgaWYgKHM9PSIwIikgewogICAgICAgICAgICAgIHRoaXMuc3RhdHVzID0gInJlamVjdGVkIjsKICAgICAgICAgIH0gZWxzZSBpZiAocz09IjEiKSB7CiAgICAgICAgICAgICAgdGhpcy5zdGF0dXMgPSAidmVyaWZpZWQiOwogICAgICAgICAgfSBlbHNlIGlmIChzPT0iMiIpIHsKICAgICAgICAgICAgICB0aGlzLnN0YXR1cyA9ICJwZW5kaW5nIjsKICAgICAgICAgIH0gZWxzZSBpZiAocz09IjMiKSB7CiAgICAgICAgICAgICAgdGhpcy5zdGF0dXMgPSAicmV2b2tlZCI7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHRoaXMuc3RhdHVzID0gImVycm9yIjsKICAgICAgICAgIH0KICAgICAgICAgIHZhciBkYXQ7CiAgICAgICAgICB2YXIgaHNoOwogICAgICAgICAgdmFyIG9iajsKICAgICAgICAgIGlmICh0aGlzLnN1Y2Nlc3MgJiYgdGhpcy5leHApIHsgLy9pbXBsaWVzIGRvY3VtZW50IGV4aXN0IHRvIHF1ZXJ5IG91ciBkYgogICAgICAgICAgICAgIGhzaCA9IGF3YWl0IHRoaXMuZHJpenpsZUluc3RhbmNlLmNvbnRyYWN0cy5DcmVkZW50aWFsLm1ldGhvZHMudmlld0NsYWltKHRoaXMuY2xhaW1JZCkuY2FsbCgpOwogICAgICAgICAgICAgIGRhdCA9IGF3YWl0IGRhdGFiYXNlLmNvbGxlY3Rpb24oInN0dWRlbnRzIikuZG9jKHRoaXMudXNlcikuY29sbGVjdGlvbigiZXhwIikuZG9jKGhzaCkuZ2V0KCk7CiAgICAgICAgICAgICAgb2JqID0gZGF0LmRhdGEoKTsKICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5zdWNjZXNzICYmICF0aGlzLmV4cCkgewogICAgICAgICAgICAgIGhzaCA9IGF3YWl0IHRoaXMuZHJpenpsZUluc3RhbmNlLmNvbnRyYWN0cy5DcmVkZW50aWFsLm1ldGhvZHMudmlld0NsYWltKHRoaXMuY2xhaW1JZCkuY2FsbCgpOwogICAgICAgICAgICAgIGRhdCA9IGF3YWl0IGRhdGFiYXNlLmNvbGxlY3Rpb24oInN0dWRlbnRzIikuZG9jKHRoaXMudXNlcikuY29sbGVjdGlvbigiYWNhZHMiKS5kb2MoaHNoKS5nZXQoKTsKICAgICAgICAgICAgICBvYmogPSBkYXQuZGF0YSgpOwogICAgICAgICAgfQogICAgICAgICAgdGhpcy5hcnIgPSBbXTsKICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgYXdhaXQgT2JqZWN0LmtleXMob2JqKS5mb3JFYWNoKGZpZWxkID0+IHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuYXJyLnB1c2goZmllbGQudG9TdHJpbmcoKSArICI6ICIgKyBvYmpbZmllbGRdKTsKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICBhd2FpdCB0aGlzLmFyci5zb3J0KCk7CiAgICAgICAgICB9IGNhdGNoKGVycikgewogICAgICAgICAgICAgIHRoaXMuc3VjY2VzcyA9IGZhbHNlOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgICAgICB9CiAgICAgIH0sCiAgfSwKICBkYXRhKCkgewogICAgICByZXR1cm4gewogICAgICAgICAgLy8gYWxsIHRoZXNlIGRhdGEgd2lsbCBzZXJ2ZSBhcyBhcmd1bWVudHMgdG8gb3VyIGNvbnRyYWN0IGNhbGxzCiAgICAgICAgICBjbGFpbUlkOiAnJywKICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLAogICAgICAgICAgc3RhdHVzOiAnJywKICAgICAgICAgIGV4cDogZmFsc2UsCiAgICAgICAgICBhcnI6IFtdLAogICAgICAgICAgdXNlcjogJycsCiAgICAgIH0KICB9LAp9Cg=="},{"version":3,"sources":["InstitutionView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"InstitutionView.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n    <hdrIns></hdrIns>\n    <br><hr>\n    <p> <b> View Credential </b> </p>\n    <form>\n        <label> Credential ID: </label>\n        <input type=\"number\" v-model=\"claimId\" placeholder=\"Credential ID\"/> <br>\n        <label> Candidate: </label>\n        <input type=\"text\" v-model=\"user\" placeholder=\"Candidate Address\"/> <br>\n        <label for=\"can\"> Academic </label>\n        <input type=\"radio\" name=\"type\" v-model=\"exp\" v-bind:value=\"false\"> <br>\n        <label for=\"ins\"> Experience </label>\n        <input type=\"radio\" name=\"type\" v-model=\"exp\" v-bind:value=\"true\"> <br> \n        <br>\n        <button v-on:click.prevent=\"retrieveClaim\"> Retrieve Claim </button>\n    </form>\n    <hr>\n    <div v-if=\"this.success\">\n        <!-- Can add score here if status is valid -->\n        <p> Credential status is <b><u> {{this.status}}.</u></b> </p>\n        <div class=\"scorecard\">\n            <p> <b> <i> Details: </i> </b> </p>\n            <p v-for=\"field in arr\" v-bind:key=\"field\"> {{field}} </p>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport database from '../firebase.js' //to log our data\n\nexport default {\n  name: \"app\",\n  computed: {\n      ...mapGetters(\"accounts\",[\"activeAccount\",\"activeBalance\"]),\n      ...mapGetters(\"drizzle\",[\"drizzleInstance\",\"isDrizzleInitialized\"]),\n  },\n  methods: {\n      async retrieveClaim() {\n          this.success = true; //reset\n          this.status = ''; //reset\n          var s = await this.drizzleInstance\n            .contracts\n            .Credential\n            .methods\n            .getStatus(this.claimId)\n            .call().catch((err) => { //call has no \"then\"!?\n                this.success = false;\n                console.log(err);\n            });\n          if (s==\"0\") {\n              this.status = \"rejected\";\n          } else if (s==\"1\") {\n              this.status = \"verified\";\n          } else if (s==\"2\") {\n              this.status = \"pending\";\n          } else if (s==\"3\") {\n              this.status = \"revoked\";\n          } else {\n              this.status = \"error\";\n          }\n          var dat;\n          var hsh;\n          var obj;\n          if (this.success && this.exp) { //implies document exist to query our db\n              hsh = await this.drizzleInstance.contracts.Credential.methods.viewClaim(this.claimId).call();\n              dat = await database.collection(\"students\").doc(this.user).collection(\"exp\").doc(hsh).get();\n              obj = dat.data();\n          } else if (this.success && !this.exp) {\n              hsh = await this.drizzleInstance.contracts.Credential.methods.viewClaim(this.claimId).call();\n              dat = await database.collection(\"students\").doc(this.user).collection(\"acads\").doc(hsh).get();\n              obj = dat.data();\n          }\n          this.arr = [];\n          try {\n              await Object.keys(obj).forEach(field => {\n                  return this.arr.push(field.toString() + \": \" + obj[field]);\n              });\n              await this.arr.sort();\n          } catch(err) {\n              this.success = false;\n              console.log(err);\n          }\n      },\n  },\n  data() {\n      return {\n          // all these data will serve as arguments to our contract calls\n          claimId: '',\n          success: false,\n          status: '',\n          exp: false,\n          arr: [],\n          user: '',\n      }\n  },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n\n\n\n\n"]}]}